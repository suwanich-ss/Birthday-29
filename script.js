const questions = [
    {
        image: "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExM21tNnFzempyeG1na2t1NHFxeHZ3NDF1cDkzcmV2M2RhNzcwam5yMyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Lv2VhwHrt6ljhvZ6LF/giphy.gif",
        question: "‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡πÄ‡∏î‡∏ó‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô? üíï",
        options: ["‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞", "‡∏°‡∏´‡∏≤‡∏•‡∏±‡∏¢", "‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏î"],
        correct: 3,
        story: "‡πÅ‡∏ü‡∏ô‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏¢‡∏¢ ‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏¢ ‡πÅ‡∏ü‡∏ô‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å‡∏Å üíï"
    },
    {
        image: "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExZ2RpdDYzNHNocG83eGNud2J4MjVjemQ0dTVycG5ldWtra292OXFkcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/xR5cPyPoL5HVXSphqA/giphy.gif",
        question: "‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô‡∏Å‡∏±‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà? üíñ",
        options: ["26 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "16 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "1 ‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "26 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°"],
        correct: 3,
        story: "‡πÉ‡∏ä‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 26 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏° ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ï‡∏∑‡πâ‡∏≠‡πÅ‡∏ü‡∏ô‡∏ô‡∏≤‡∏ô‡∏°‡∏≤‡∏Å‡∏Å ‡∏Å‡∏ß‡πà‡∏≤‡πÅ‡∏ü‡∏ô‡∏à‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏£‡∏±‡∏Å‡πÅ‡∏ü‡∏ô‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö ‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏î‡πá‡∏Å‡∏Ç‡∏µ‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡πâ‡∏≤ üíï‚ú®"
    },
    {
        image: "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExcGF5amloeTM1ZnRhbjdsa3gxYzNkbTFvaXd5eDI2cDVwZzV1czZ1YiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/EbGJAAFcGwmrt4t4vo/giphy.gif",
        question: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ü‡∏ô‡∏ä‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£? üçú",
        options: ["‡∏™‡πâ‡∏°‡∏ï‡∏≥/‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß/‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà", "‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î", "‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á"],
        correct: 0,
        story: "‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏ü‡∏ô‡∏Å‡∏¥‡∏ô‡∏ö‡πà‡∏≠‡∏¢‡∏¢ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ü‡∏ô‡∏Å‡πá‡∏ä‡∏≠‡∏ö‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÅ‡∏ü‡∏ô‡∏ä‡∏≠‡∏ö‡∏Å‡∏¥‡∏ô‡πÄ‡∏™‡πâ‡∏ô ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏≤‡πÉ‡∏à‡πÅ‡∏ü‡∏ô‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πà‡∏°‡∏∞ ‡∏≠‡∏¥‡∏≠‡∏¥üçöüíï"
    },
    {
        image: "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExMmJnNTNpb2dpZmdqaTN6NXc1MHYxNHM5cndtb3ZjaWo5cWo2ZDdzOCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/R26ERFVcOuANi3EWfT/giphy.gif",
        question: "‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏ü‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£? üíù",
        options: ["‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å", "‡πÅ‡∏ü‡∏ô", "‡∏Ñ‡∏∏‡∏ì‡∏´‡∏ô‡∏π", "‡πÄ‡∏ö‡∏ö‡∏µ‡πã"],
        correct: 1,
        story: "‡πÄ‡∏≠‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏Ñ‡πâ‡∏≤‡∏Å‡πá‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏ü‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡∏∞‡πÅ‡∏ï‡πà‡∏ä‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏Å‡πá‡∏Ñ‡∏á‡πÄ‡∏õ‡πá‡∏ô ‡πÅ‡∏ü‡∏ô‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏ü‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡∏™‡∏ß‡∏¢‡∏¢ üçØüíï"
    },
    {
        image: "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExeDMzdW13aXNxZDQwbm5lYW8wZ3JhaDNzOXh1b3Z3N2l1MW9kcmt1NCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/DdJ9RsY88uBarMvVsb/giphy.gif",
        question: "‡πÄ‡∏Ñ‡πâ‡∏≤‡∏´‡∏ß‡∏á‡πÅ‡∏ü‡∏ô‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô",
        options: ["100%", "15%", "50%", "0%"],
        correct: 0,
        story: "‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡πÅ‡∏ü‡∏ô ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏´‡∏ß‡∏á‡πÅ‡∏ü‡∏ô 100% ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏ü‡∏ô‡∏™‡∏ß‡∏¢ ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡πÅ‡∏ü‡∏ô‡πÑ‡∏õ‡πÄ‡∏•‡∏¢‡∏¢üíï"
    }
];
const floatingEmojis = ['üíñ', 'üéÇ', 'üíï', 'üéâ', 'üíù', 'üéà', '‚ú®', 'üåü', 'üí´', 'üéÅ', 'üéä', 'üíê', 'üåπ', 'üíó'];
let currentQuestion = 0;
let score = 0;
let answered = false;

function createFloatingEmoji() {
    const emojiContainer = document.querySelector('.floating-emojis');
    const emoji = document.createElement('div');
    emoji.className = 'floating-emoji';
    emoji.textContent = floatingEmojis[Math.floor(Math.random() * floatingEmojis.length)];
    emoji.style.left = Math.random() * 100 + '%';
    emoji.style.animationDuration = (Math.random() * 3 + 5) + 's';
    emoji.style.fontSize = (Math.random() * 1 + 1.5) + 'rem';

    emojiContainer.appendChild(emoji);


    setTimeout(() => {
        if (emoji.parentNode) {
            emoji.parentNode.removeChild(emoji);
        }
    }, 8000);
}


function startFloatingEmojis() {

    setInterval(() => {
        createFloatingEmoji();
    }, Math.random() * 2000 + 2000);
}

function startGame() {
    document.getElementById('startScreen').style.display = 'none';
    document.getElementById('questionScreen').style.display = 'block';
    showQuestion();
}

function showQuestion() {
    const question = questions[currentQuestion];


    document.getElementById('questionCounter').textContent = `‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà ${currentQuestion + 1} ‡∏à‡∏≤‡∏Å ${questions.length}`;
    document.getElementById('questionImage').src = question.image;
    document.getElementById('questionText').textContent = question.question;


    const optionsContainer = document.getElementById('options');
    optionsContainer.innerHTML = '';

    question.options.forEach((option, index) => {
        const optionElement = document.createElement('div');
        optionElement.className = 'option';
        optionElement.textContent = option;
        optionElement.onclick = () => selectAnswer(index);
        optionsContainer.appendChild(optionElement);
    });


    document.getElementById('storyText').classList.add('hidden');
    document.getElementById('nextBtn').classList.add('hidden');
    answered = false;
}

function selectAnswer(selectedIndex) {
    if (answered) return;

    answered = true;
    const question = questions[currentQuestion];
    const options = document.querySelectorAll('.option');

    options.forEach((option, index) => {
        if (index === question.correct) {
            option.classList.add('correct');
        } else if (index === selectedIndex && index !== question.correct) {
            option.classList.add('wrong');
        }
        option.style.pointerEvents = 'none';
    });

    if (selectedIndex === question.correct) {
        score++;
        for (let i = 0; i < 3; i++) {
            setTimeout(() => createFloatingEmoji(), i * 200);
        }
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß
    setTimeout(() => {
        document.getElementById('storyText').textContent = question.story;
        document.getElementById('storyText').classList.remove('hidden');
        document.getElementById('nextBtn').classList.remove('hidden');
    }, 1000);
}

function nextQuestion() {
    currentQuestion++;
    if (currentQuestion >= questions.length) {
        showFinalScreen();
    } else {
        showQuestion();
    }
}

function showFinalScreen() {
    document.getElementById('questionScreen').style.display = 'none';
    document.getElementById('finalScreen').style.display = 'block';

    const percentage = Math.round((score / questions.length) * 100);
    document.getElementById('finalScore').textContent = `‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ${score}/${questions.length} (${percentage}%)`;

    for (let i = 0; i < 10; i++) {
        setTimeout(() => createFloatingEmoji(), i * 100);
    }
}

function restartGame() {
    currentQuestion = 0;
    score = 0;
    answered = false;
    document.getElementById('finalScreen').style.display = 'none';
    document.getElementById('startScreen').style.display = 'block';
}

document.addEventListener('DOMContentLoaded', function () {
    startFloatingEmojis();
});